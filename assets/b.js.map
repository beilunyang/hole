{"version":3,"sources":["webpack:///b.js","webpack:///webpack/bootstrap bc875cae2d248de2151e","webpack:///./src/entry.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./~/vue-router/dist/vue-router.js","webpack:///./src/script/script.js","webpack:///./src/views/index.vue","webpack:///index.vue","webpack:///./src/components/section.vue","webpack:///section.vue","webpack:///./src/components/comment.vue","webpack:///comment.vue","webpack:///./src/components/comment.vue?d333","webpack:///./src/components/section.vue?9f7c","webpack:///./src/components/pagination.vue","webpack:///pagination.vue","webpack:///./src/components/pagination.vue?8ada","webpack:///./src/components/loading.vue","webpack:///./src/components/loading.vue?5d2f","webpack:///./src/load.gif","webpack:///./src/views/index.vue?16ce","webpack:///./src/views/post.vue","webpack:///post.vue","webpack:///./src/views/post.vue?b674","webpack:///./src/views/404.vue","webpack:///404.vue","webpack:///./src/views/404.vue?2816"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Vue","Router","use","router","map","/","name","component","/page/:id","/post/:id","*","beforeEach","window","scrollTo","route","directive","value","time","split","join","this","el","innerText","update","newValue","oldValue","DISQUS","reset","reload","config","page","identifier","url","location","href","App","extend","start","global","set","obj","key","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","i","length","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","isLiteral","exp","literalValueRE","test","isReserved","str","charCodeAt","_toString","toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind$1","fn","ctx","l","arguments","apply","toArray","list","ret","Array","to","from","keys","Object","isObject","isPlainObject","OBJECT_STRING","def","enumerable","defineProperty","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","indexOf","arr","cancellable","cb","cancelled","cancel","looseEqual","JSON","stringify","Cache","limit","size","head","tail","undefined","_keymap","create","pushFilter","filter","lastFilterIndex","trim","tokens","match","filterTokenRE","processFilterArg","dir","filters","push","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","index","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE$1","appendWithTransition","target","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","document","querySelector","inDoc","node","doc","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on$1","event","useCapture","addEventListener","off","removeEventListener","setClass","cls","isIE9","SVGElement","setAttribute","className","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","content","DocumentFragment","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","data","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__vue_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","checkComponentAttr","options","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","initProp","prop","path","coerceProp","assertProp","raw","required","expectedType","type","valid","String","Boolean","Function","isArray","validator","coerce","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","components","ids","guardProps","props","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","camelizedId","charAt","assertAsset","Dep","uid$3","subs","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","getter","setter","convertAllProperties","property","getOwnPropertyDescriptor","childOb","depend","e","newVal","initMixin","prototype","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","constructor","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","has","circular","waiting","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","user","q","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","prevError","twoWay","queued","shallow","traverse","normalize","propCache","prefix","camel","upper","testEl","prefixed","prefixes","camelPrefixes","style","keyFilter","handler","codes","charCode","parseInt","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","getValue","multi","init","selected","_value","indexOf$1","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","suffix","innerHTML","nodeToFragment","textContent","clonedNode","cloneNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__vfrag__","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","outerHTML","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","Math","floor","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","forEach","isHidden","offsetWidth","getClientRects","stringToObject","contains$1","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","getDefault","$get","_bindDir","propDef","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","publicDirectives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","dirName","terminalDirectives","pushDir","interpTokens","hasOneTimeToken","hasOneTime","rawName","rawValue","interp","dirDef","matched","parseModifiers","modifierRE","bind","transitionRE","bindRE","onRE","on","dirAttrRE","makeNodeLinkFn","directives","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","propsData","optionsDataFn","optionsData","oldData","removeVm","computed","userDef","methods","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","j","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","refs","_compile","_initElement","contentLinkFn","rootLinker","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","write","offset","k","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","globalAPI","createClass","util","compiler","parsers","text$1","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","installed","unshift","install","mixin","definition","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE","$interpolate","$log","console","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","some","$broadcast","source","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","search","delimiter","convertArray","item","reduce","$value","$key","orderBy","sortKey","reverse","order","extractFragment","main","__v_selected","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","navigator","userAgent","isAndroid","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","setImmediate","shift","entry","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","warn","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","paramAttributes","arrayProto","addSub","sub","removeSub","addDep","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","current","depIds","cloak","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","FOR","IF","SLOT","unbind","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","removeProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","modelProps","true-value","false-value","invalid","modelProp","model","__v_model","listener","setAttributeNS","esc","tab","enter","space","delete","up","right","down","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","checkbox","getBooleanValue","checked","_trueValue","_falseValue","params","_watcher","afterBind","select","forceUpdate","multiple","initValue","selectedIndex","radio","text$2","isRange","composing","focused","rawListener","hasjQuery","jQuery","checkFilters","hasRead","hasWrite","_unbind","show","nextElementSibling","elseEl","toggle","display","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","rect","t","placeholder","vIf","elseFactory","elseFrag","uid$1","vFor","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","staggerAmount","getStagger","total","trans","stagger","_preProcess","_postProcess","swap","for","if","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","oldId","bindingModes","childKey","parentKey","parentWatcher","childWatcher","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHook","activate","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","transitionMode","vClass","handleArray","cleanup","prevKeys","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","called","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","slot","fallback","slotName","selector","tryCompile","elseBlock","namedSlot","elementDirectives","_namedSlot","version","transitions","partials","Target","matcher","delegate","Matcher","routes","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","len","substr","eachRoute","baseRoute","callback","binding","addRouteCallback","StaticSegment","string","DynamicSegment","StarSegment","EpsilonSegment","specificity","segments","results","segment","State","charSpec","nextStates","sortSolutions","states","recognizeChar","state","RecognizeResults","queryParams","findHandler","regex","captures","currentCapture","isDynamic","addSegment","currentState","eachChar","decodeQueryParamPart","part","decodeURIComponent","msg","exports$1","Error","stack","resolvePath","base","relative","pop","isPromise","then","getRouteConfig","resolveAsyncComponent","resolver","resolve","mapParams","genQuery","canReuse","view","canReuseFn","canDeactivate","fromComponent","expectBoolean","canActivate","aborted","deactivate","callHooks","reuse","activateQueue","saveChildView","dataHook","waitForData","activated","loading","$loadingRouteData","_routerView","cachedChildView","_keepAliveRouterView","childView","_rendered","_transitionOnLoad","setCurrent","afterData","afterActivate","loadData","postActivate","processData","promises","resolvedVal","all","isPlainOjbect","applyOverride","_Vue$util","root","_parent","$router","$route","_children","_defineMeta","hooksToMergeRE","View","componentDef","viewDef","_isDynamicLiteral","parentView","_rootView","_currentTransition","elementDirective","Link","sameOrigin","link","protocol","hostname","port","__v_link_active","onRouteUpdate","activeEl","onClick","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","button","go","pathname","newPath","_stringifyPath","updateActiveMatch","updateHref","updateClasses","activeRE","queryStringRE","isAbsolute","history","formatPath","_linkActiveClass","dest","trailingSlashRE","guardComponent","comp","babelHelpers","classCallCheck","instance","Constructor","TypeError","willAddRoute","addChild","contextEntered","specials","validChars","generate","invalidChars","repeat","isEqual","chars","returned","oCreate","proto","F","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","output","generateQueryString","pairs","pair","encodeURIComponent","arrayPair","parseQueryString","queryString","keyLength","recognize","pathLen","queryStart","isSlashDropped","decodeURI","solutions","VERSION","hashRE","HTML5History","onChange","rootRE","baseEl","_this","replaceState","pos","x","pageXOffset","y","pageYOffset","pushState","hashMatch","HashHistory","hashbang","formattedPath","isAbsoloute","AbstractHistory","currentPath","RouteTransition","abort","abortingOnLoad","redirect","deactivateQueue","reverseDeactivateQueue","reuseQueue","runQueue","_onTransitionValidated","_view","step","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","err","_suppress","onPromiseError","nextWithBoolean","ok","nextWithData","exposed","internalKeysRE","Route","_recognizer","_notFoundHandler","historyBackends","abstract","html5","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","app","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","History","_match","_saveScrollPosition","_map","rootPath","_notFound","_addRoute","_addRedirect","_addAlias","afterEach","container","_appContainer","Ctor","_appConstructor","_location","assign","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","scrollX","offsetTop","currentParams","targetParams","encodeURI","externalVue","$","isShow","brand","navbar","animate","height","opacity","scrollTop","__vue_script__","__vue_template__","__esModule","pid","posts","showload","mySection","myPagination","tmp_id","ghost","api","fields","include","fail","myComment","pages","forward","backward","canNext","canPrev","post_content"],"mappings":"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","file":"b.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!**********************!*\\\n  !*** ./src/entry.js ***!\n  \\**********************/\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Vue = __webpack_require__(/*! vue */ 1),\r\n\t\tRouter = __webpack_require__(/*! vue-router */ 2);\r\n\t\r\n\t__webpack_require__(/*! ./style/grid.css */ 3);\r\n\t__webpack_require__(/*! ./style/sass/entry.scss */ 7);\r\n\t__webpack_require__(/*! ./style/github-markdown.css */ 9);\r\n\t__webpack_require__(/*! ./script/script.js */ 11);\r\n\t\r\n\tVue.use(Router);\r\n\t\r\n\tvar router = new Router();\r\n\t\r\n\trouter.map({\r\n\t\t'/':{\r\n\t\t\tname:'index',\r\n\t\t\tcomponent:__webpack_require__(/*! ./views/index.vue */ 12)\r\n\t\t},\r\n\t\t'/page/:id':{\r\n\t\t\tname:'page',\r\n\t\t\tcomponent:__webpack_require__(/*! ./views/index.vue */ 12)\r\n\t\t},\r\n\t\t'/post/:id':{\r\n\t\t\tname:'post',\r\n\t\t\tcomponent:__webpack_require__(/*! ./views/post.vue */ 27)\r\n\t\t},\r\n\t\t'*':{\r\n\t\t\tcomponent:__webpack_require__(/*! ./views/404.vue */ 30)\r\n\t\t}\r\n\t});\r\n\t\r\n\trouter.beforeEach(function(){\r\n\t\twindow.scrollTo(0, 0);\r\n\t});\r\n\t\r\n\twindow.route = router;\r\n\t\r\n\tVue.directive('f-time',function(value){\r\n\t\tif(typeof value === 'string'){\r\n\t\t\tvar time = value.split('T')[0].split('-').join('/');\r\n\t\t\tthis.el.innerText = time; \r\n\t\t}\r\n\t});\r\n\t\r\n\tVue.directive('show-comment',{\r\n\t\tupdate:function(newValue,oldValue){\r\n\t\t\tif(newValue.id){\r\n\t\t\t\tDISQUS.reset({\r\n\t\t\t\t  reload: true,\r\n\t\t\t\t  config: function () {  \r\n\t\t\t\t    this.page.identifier = newValue.id;  \r\n\t\t\t\t    this.page.url = location.href;\r\n\t\t\t\t  }\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t\r\n\t/*Vue.directive('show-count',{\r\n\t\t//有谁能帮忙解决首页获取disqus评论数的问题。此方法能行，但不优雅。\r\n\t\tupdate:function(newValue,oldValue){\r\n\t\t\tvar s = document.createElement('script');\r\n\t\t\ts.src = '//bitibiti.disqus.com/count.js';\r\n\t\t\t(document.head || document.body).appendChild(s);\r\n\t\t\tif(newValue.id){\r\n\t\t\t\tthis.el.href = location.host + '/#!/post/' + newValue.id + '#disqus_thread';\r\n\t\t\t\tthis.el.dataset.disqusIdentifier = newValue.id;\r\n\t\t\t\tthis.el.className = 'go-comment';\r\n\t\t\t\tDISQUSWIDGETS.getCount({reset:true});\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t});*/\r\n\t\r\n\tvar App = Vue.extend({});\r\n\trouter.start(App,'#app');\n\n/***/ },\n/* 1 */\n/*!**********************************!*\\\n  !*** ./~/vue/dist/vue.common.js ***!\n  \\**********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.16\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind$1(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a non-enumerable property\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\tvar isIE9 = inBrowser && navigator.userAgent.toLowerCase().indexOf('msie 9.0') > 0;\n\t\n\tvar isAndroid = inBrowser && navigator.userAgent.toLowerCase().indexOf('android') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined') {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  text = text.replace(/\\n/g, '');\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE$1.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether or not to handle fully object properties which\n\t   * are already backed by getters and seters. Depending on\n\t   * use case and environment, this might introduce non-neglible\n\t   * performance penalties.\n\t   */\n\t  convertAllProperties: false,\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t    warn = function (msg, e) {\n\t      if (hasConsole && (!config.silent || config.debug)) {\n\t        console.warn('[Vue warn]: ' + msg);\n\t        /* istanbul ignore if */\n\t        if (config.debug) {\n\t          if (e) {\n\t            throw e;\n\t          } else {\n\t            console.warn(new Error('Warning Stack Trace').stack);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on$1(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !(el instanceof SVGElement)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && el.content instanceof DocumentFragment) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__vue_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;\n\tvar reservedTagRE = /^(slot|partial|component)$/;\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        if (tag.indexOf('-') > -1 || /HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el) {\n\t  // dynamic syntax\n\t  var exp = getAttr(el, 'is');\n\t  if (exp != null) {\n\t    return { id: exp };\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  var key = prop.path;\n\t  value = coerceProp(prop, value);\n\t  vm[key] = vm._data[key] = assertProp(prop, value) ? value : undefined;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction assertProp(prop, value) {\n\t  // if a prop is not provided and is not required,\n\t  // skip the check.\n\t  if (prop.raw === null && !prop.required) {\n\t    return true;\n\t  }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = true;\n\t  var expectedType;\n\t  if (type) {\n\t    if (type === String) {\n\t      expectedType = 'string';\n\t      valid = typeof value === expectedType;\n\t    } else if (type === Number) {\n\t      expectedType = 'number';\n\t      valid = typeof value === 'number';\n\t    } else if (type === Boolean) {\n\t      expectedType = 'boolean';\n\t      valid = typeof value === 'boolean';\n\t    } else if (type === Function) {\n\t      expectedType = 'function';\n\t      valid = typeof value === 'function';\n\t    } else if (type === Object) {\n\t      expectedType = 'object';\n\t      valid = isPlainObject(value);\n\t    } else if (type === Array) {\n\t      expectedType = 'array';\n\t      valid = isArray(value);\n\t    } else {\n\t      valid = value instanceof type;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    (\"production\") !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator.call(null, value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\tfunction formatType(val) {\n\t  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n\t}\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * 0.11 deprecation warning\n\t */\n\t\n\tstrats.paramAttributes = function () {\n\t  /* istanbul ignore next */\n\t  (\"production\") !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var def;\n\t    var ids = Object.keys(components);\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  var options = {};\n\t  var key;\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  return assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t}\n\t\n\t/**\n\t * Assert asset exists\n\t */\n\t\n\tfunction assertAsset(val, type, id) {\n\t  if (!val) {\n\t    (\"production\") !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n\t  }\n\t}\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar uid$3 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$3++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  target.__proto__ = src;\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter, setter;\n\t  if (config.convertAllProperties) {\n\t    var property = Object.getOwnPropertyDescriptor(obj, key);\n\t    if (property && property.configurable === false) {\n\t      return;\n\t    }\n\t    getter = property && property.get;\n\t    setter = property && property.set;\n\t  }\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind$1,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on$1,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tassertAsset: assertAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tinitProp: initProp,\n\t\tassertProp: assertProp,\n\t\tcoerceProp: coerceProp,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // save raw constructor data before merge\n\t    // so that we know which properties are provided at\n\t    // instantiation.\n\t    if (false) {\n\t      this._runtimeData = options.data;\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initScope().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'proctected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\")|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    return new Function('scope', 'return ' + body + ';');\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar internalQueueDepleted = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue = [];\n\t  userQueue = [];\n\t  has = {};\n\t  circular = {};\n\t  waiting = internalQueueDepleted = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  internalQueueDepleted = true;\n\t  runBatcherQueue(userQueue);\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        queue.splice(has[id], 1);\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // if an internal watcher is pushed, but the internal\n\t    // queue is already depleted, we run it immediately.\n\t    if (internalQueueDepleted && !watcher.user) {\n\t      watcher.run();\n\t      return;\n\t    }\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String} expression\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = isFn ? expOrFn.toString() : expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = Object.create(null);\n\t  this.newDeps = null;\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDeps[id]) {\n\t    this.newDeps[id] = dep;\n\t    if (!this.deps[id]) {\n\t      this.deps[id] = dep;\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t  this.newDeps = Object.create(null);\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var ids = Object.keys(this.deps);\n\t  var i = ids.length;\n\t  while (i--) {\n\t    var id = ids[i];\n\t    if (!this.newDeps[id]) {\n\t      this.deps[id].removeSub(this);\n\t    }\n\t  }\n\t  this.deps = this.newDeps;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var depIds = Object.keys(this.deps);\n\t  var i = depIds.length;\n\t  while (i--) {\n\t    this.deps[depIds[i]].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var depIds = Object.keys(this.deps);\n\t    var i = depIds.length;\n\t    while (i--) {\n\t      this.deps[depIds[i]].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tfunction traverse(val) {\n\t  var i, keys;\n\t  if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) traverse(val[i]);\n\t  } else if (isObject(val)) {\n\t    keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) traverse(val[keys[i]]);\n\t  }\n\t}\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n\t  }\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar FOR = 2000;\n\tvar IF = 2000;\n\tvar SLOT = 2100;\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        value = value.replace(importantRE, '').trim();\n\t      }\n\t      this.el.style.setProperty(prop, value, isImportant);\n\t    } else {\n\t      this.el.style.removeProperty(prop);\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return prefixes[i] + prop;\n\t    }\n\t  }\n\t  if (camel in testEl.style) {\n\t    return prop;\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on = {\n\t\n\t  acceptStatement: true,\n\t  priority: ON,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on$1(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on$1(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.listener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && node.content instanceof DocumentFragment;\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment.\n\t  if (isRealTemplate(node)) {\n\t    trimNode(node.content);\n\t    return node.content;\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (template instanceof DocumentFragment) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__vue_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__vfrag__ = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__vfrag__ = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el)) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : el.outerHTML);\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseFactory = new FragmentFactory(this.vm, next);\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t      this.factory = new FragmentFactory(this.vm, el);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseFactory && !this.elseFrag) {\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar uid$1 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in items\" syntax\n\t    var inMatch = this.expression.match(/(.*) in (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Alias is required in v-for.');\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$1;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          frag.scope[alias] = value;\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t      return w.active;\n\t    });\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    defineReactive(scope, alias, value);\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__vfrag__ = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.before(prevEl.nextSibling);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else {\n\t        def(value, id, frag);\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__vfrag__;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__vfrag__;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n\t  };\n\t}\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\tvar text = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar publicDirectives = {\n\t  text: text,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on,\n\t  bind: bind,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind$1(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t\n\t  // Important hack:\n\t  // in Chrome, if a just-entered element is applied the\n\t  // leave class while its interpolated property still has\n\t  // a very small value (within one frame), Chrome will\n\t  // skip the leave transition entirely and not firing the\n\t  // transtionend event. Therefore we need to protected\n\t  // against such cases using a one-frame timeout.\n\t  this.justEntered = true;\n\t  var self = this;\n\t  setTimeout(function () {\n\t    self.justEntered = false;\n\t  }, 17);\n\t\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on$1(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t}\n\t\n\tvar transition = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    // apply on closest vm\n\t    el.__v_trans = new Transition(el, id, hooks, this.el.__vue__ || this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      val = coerceProp(prop, val);\n\t      if (assertProp(prop, val)) {\n\t        child[childKey] = val;\n\t      }\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(id, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || id;\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(id, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHook = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHook && !cached) {\n\t      this.waitingFor = newComponent;\n\t      activateHook.call(newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      this.waitingFor.$destroy();\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (false) {\n\t      if (current) current._inactive = true;\n\t      target._inactive = false;\n\t    }\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (value && typeof value === 'string') {\n\t      this.handleObject(stringToObject(value));\n\t    } else if (isPlainObject(value)) {\n\t      this.handleObject(value);\n\t    } else if (isArray(value)) {\n\t      this.handleArray(value);\n\t    } else {\n\t      this.cleanup();\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    this.cleanup(value);\n\t    var keys = this.prevKeys = Object.keys(value);\n\t    for (var i = 0, l = keys.length; i < l; i++) {\n\t      var key = keys[i];\n\t      if (value[key]) {\n\t        addClass(this.el, key);\n\t      } else {\n\t        removeClass(this.el, key);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleArray: function handleArray(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      if (value[i]) {\n\t        addClass(this.el, value[i]);\n\t      }\n\t    }\n\t    this.prevKeys = value.slice();\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    if (this.prevKeys) {\n\t      var i = this.prevKeys.length;\n\t      while (i--) {\n\t        var key = this.prevKeys[i];\n\t        if (key && (!value || !contains$1(value, key))) {\n\t          removeClass(this.el, key);\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction stringToObject(value) {\n\t  var res = {};\n\t  var keys = value.trim().split(/\\s+/);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    res[keys[i]] = true;\n\t  }\n\t  return res;\n\t}\n\t\n\tfunction contains$1(value, key) {\n\t  return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n\t}\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition\n\t};\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.');\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.');\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (options.required) {\n\t      // warn missing required\n\t      (\"production\") !== 'production' && warn('Missing required prop: ' + name);\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, getDefault(vm, options));\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (vm._context) {\n\t          if (prop.mode === propBindingModes.ONE_TIME) {\n\t            // one time binding\n\t            value = (scope || vm._context).$get(prop.parentPath);\n\t            initProp(vm, prop, value);\n\t          } else {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          }\n\t        } else {\n\t            (\"production\") !== 'production' && warn('Cannot bind dynamic prop on a root instance' + ' with no parent: ' + prop.name + '=\"' + raw + '\"');\n\t          }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value\n\t        value = options.type === Boolean && raw === '' ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction getDefault(vm, options) {\n\t  // no default, return undefined\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// terminal directives\n\tvar terminalDirectives = ['for', 'if'];\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && node.tagName !== 'SCRIPT') {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(el.attributes, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: publicDirectives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) return;\n\t  // special case: give named slot a higher priority\n\t  // than unnamed slots\n\t  if (tag === 'slot' && hasBindAttr(el, 'name')) {\n\t    tag = '_namedSlot';\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t  var value, dirName;\n\t  for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n\t    dirName = terminalDirectives[i];\n\t    value = el.getAttribute('v-' + dirName);\n\t    if (value != null) {\n\t      return makeTerminalNodeLinkFn(el, dirName, value, options);\n\t    }\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} [def]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    // either an element directive, or if/for\n\t    def: def || publicDirectives[dirName]\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', publicDirectives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', publicDirectives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', publicDirectives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName);\n\t\n\t              if (false) {\n\t                assertAsset(dirDef, 'directive', dirName);\n\t              }\n\t\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (el instanceof DocumentFragment) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value)) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\tterminalDirectives: terminalDirectives,\n\t\ttransclude: transclude\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var propsData = this._data;\n\t    var optionsDataFn = this.$options.data;\n\t    var optionsData = optionsDataFn && optionsDataFn();\n\t    var runtimeData;\n\t    if (false) {\n\t      runtimeData = (typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData) || {};\n\t      this._runtimeData = null;\n\t    }\n\t    if (optionsData) {\n\t      this._data = optionsData;\n\t      for (var prop in propsData) {\n\t        if (false) {\n\t          warn('Data field \"' + prop + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n\t        }\n\t        if (this._props[prop].raw !== null || !hasOwn(optionsData, prop)) {\n\t          set(optionsData, prop, propsData[prop]);\n\t        }\n\t      }\n\t    }\n\t    var data = this._data;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      this._proxy(key);\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind$1(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind$1(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind$1(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {String} name\n\t * @param {Node} el\n\t * @param {Vue} vm\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} raw\n\t * @param {Object} def - directive definition object\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t *\n\t * @param {Object} def\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind$1(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind$1(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = params[i];\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on$1(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (el instanceof DocumentFragment) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {String} name - directive name\n\t   * @param {Node} node   - target node\n\t   * @param {Object} desc - parsed directive descriptor\n\t   * @param {Object} def  - directive definition object\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name);\n\t      if (false) {\n\t        assertAsset(fn, 'filter', filter.name);\n\t      }\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String} id\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (id, cb) {\n\t    var factory = resolveAsset(this.$options, 'components', id);\n\t    if (false) {\n\t      assertAsset(factory, 'component', id);\n\t    }\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory(function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tfunction globalAPI (Vue) {\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text$1,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t}\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement && !isSimplePath(exp)) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      for (var key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.');\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install APIs\n\tglobalAPI(Vue);\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n\t    return prev.concat(cur);\n\t  }, []);\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} sortKey\n\t * @param {String} reverse\n\t */\n\t\n\tfunction orderBy(arr, sortKey, reverse) {\n\t  arr = convertArray(arr);\n\t  if (!sortKey) {\n\t    return arr;\n\t  }\n\t  var order = reverse && reverse < 0 ? -1 : 1;\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(function (a, b) {\n\t    if (sortKey !== '$key') {\n\t      if (isObject(a) && '$value' in a) a = a.$value;\n\t      if (isObject(b) && '$value' in b) b = b.$value;\n\t    }\n\t    a = isObject(a) ? getPath(a, sortKey) : a;\n\t    b = isObject(b) ? getPath(b, sortKey) : b;\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  });\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   */\n\t\n\t  currency: function currency(value, _currency) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    var stringified = Math.abs(value).toFixed(2);\n\t    var _int = stringified.slice(0, -3);\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = stringified.slice(-3);\n\t    var sign = value < 0 ? '-' : '';\n\t    return _currency + sign + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id);\n\t    if (false) {\n\t      assertAsset(partial, 'partial', id);\n\t    }\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\t// This is the elementDirective that handles <content>\n\t// transclusions. It relies on the raw content of an\n\t// instance being stored as `$options._content` during\n\t// the transclude phase.\n\t\n\t// We are exporting two versions, one for named and one\n\t// for unnamed, because the unnamed slots must be compiled\n\t// AFTER all named slots have selected their content. So\n\t// we need to give them different priorities in the compilation\n\t// process. (See #1965)\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t\n\t  bind: function bind() {\n\t    var host = this.vm;\n\t    var raw = host.$options._content;\n\t    if (!raw) {\n\t      this.fallback();\n\t      return;\n\t    }\n\t    var context = host._context;\n\t    var slotName = this.params && this.params.name;\n\t    if (!slotName) {\n\t      // Default slot\n\t      this.tryCompile(extractFragment(raw.childNodes, raw, true), context, host);\n\t    } else {\n\t      // Named slot\n\t      var selector = '[slot=\"' + slotName + '\"]';\n\t      var nodes = raw.querySelectorAll(selector);\n\t      if (nodes.length) {\n\t        this.tryCompile(extractFragment(nodes, raw), context, host);\n\t      } else {\n\t        this.fallback();\n\t      }\n\t    }\n\t  },\n\t\n\t  tryCompile: function tryCompile(content, context, host) {\n\t    if (content.hasChildNodes()) {\n\t      this.compile(content, context, host);\n\t    } else {\n\t      this.fallback();\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar namedSlot = extend(extend({}, slot), {\n\t  priority: slot.priority + 1,\n\t  params: ['name']\n\t});\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @param {Element} parent\n\t * @param {Boolean} main\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent, main) {\n\t  var frag = document.createDocumentFragment();\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    // if this is the main outlet, we want to skip all\n\t    // previously selected nodes;\n\t    // otherwise, we want to mark the node as selected.\n\t    // clone the node so the original raw content remains\n\t    // intact. this ensures proper re-compilation in cases\n\t    // where the outlet is inside a conditional block\n\t    if (main && !node.__v_selected) {\n\t      append(node);\n\t    } else if (!main && node.parentNode === parent) {\n\t      node.__v_selected = true;\n\t      append(node);\n\t    }\n\t  }\n\t  return frag;\n\t\n\t  function append(node) {\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      node = parseTemplate(node);\n\t    }\n\t    node = cloneNode(node);\n\t    frag.appendChild(node);\n\t  }\n\t}\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  _namedSlot: namedSlot, // same as slot but with higher priority\n\t  partial: partial\n\t};\n\t\n\tVue.version = '1.0.16';\n\t\n\t/**\n\t * Vue and every constructor that extends Vue has an\n\t * associated options object, which can be accessed during\n\t * compilation steps as `this.constructor.options`.\n\t *\n\t * These can be seen as the default options of every\n\t * Vue instance.\n\t */\n\t\n\tVue.options = {\n\t  directives: publicDirectives,\n\t  elementDirectives: elementDirectives,\n\t  filters: filters,\n\t  transitions: {},\n\t  components: {},\n\t  partials: {},\n\t  replace: true\n\t};\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tif (devtools) {\n\t  devtools.emit('init', Vue);\n\t} else if (false) {\n\t  console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t}\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/*!*****************************************!*\\\n  !*** ./~/vue-router/dist/vue-router.js ***!\n  \\*****************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.11\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return decodeURIComponent(part);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path) {\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        queryParams = this.parseQueryString(queryString);\n\t      }\n\t\n\t      path = decodeURI(path);\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  RouteRecognizer.VERSION = '0.1.9';\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn(msg) {\n\t    /* istanbul ignore next */\n\t    if (window.console) {\n\t      console.warn('[vue-router] ' + msg);\n\t      if (!exports$1.Vue || exports$1.Vue.config.debug) {\n\t        console.warn(new Error('warning stack trace:').stack);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root) {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = decodeURI(location.pathname + location.search);\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(decodeURI(path.replace(/^#!?/, '') + query));\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    this.router = router;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 1001,\n\t      bind: function bind() {\n\t        this.el.__v_link_active = true;\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: 1000,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check if active classes should be applied to a different element\n\t        this.activeEl = this.el;\n\t        var parent = this.el.parentNode;\n\t        while (parent) {\n\t          if (parent.__v_link_active) {\n\t            this.activeEl = parent;\n\t            break;\n\t          }\n\t          parent = parent.parentNode;\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            this.router.go({\n\t              path: el.pathname,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router._stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router._stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        this.updateClasses(route.path);\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path) {\n\t        var el = this.activeEl;\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass !== activeClass) {\n\t          removeClass(el, this.prevActiveClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            addClass(el, activeClass);\n\t          } else {\n\t            removeClass(el, activeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            addClass(el, activeClass);\n\t          } else {\n\t            removeClass(el, activeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this._stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype._stringifyPath = function _stringifyPath(path) {\n\t      var fullPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          if (path.query) {\n\t            params.queryParams = path.query;\n\t          }\n\t          fullPath = this._recognizer.generate(path.name, params);\n\t        } else if (path.path) {\n\t          fullPath = path.path;\n\t          if (path.query) {\n\t            var query = this._recognizer.generateQueryString(path.query);\n\t            if (fullPath.indexOf('?') > -1) {\n\t              fullPath += '&' + query.slice(1);\n\t            } else {\n\t              fullPath += query;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        fullPath = path ? path + '' : '';\n\t      }\n\t      return encodeURI(fullPath);\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ },\n/* 3 */\n/*!****************************!*\\\n  !*** ./src/style/grid.css ***!\n  \\****************************/\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */\n/*!***********************************!*\\\n  !*** ./src/style/sass/entry.scss ***!\n  \\***********************************/\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 8 */,\n/* 9 */\n/*!***************************************!*\\\n  !*** ./src/style/github-markdown.css ***!\n  \\***************************************/\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 10 */,\n/* 11 */\n/*!******************************!*\\\n  !*** ./src/script/script.js ***!\n  \\******************************/\n/***/ function(module, exports) {\n\n\t$(function(){\r\n\t\tvar isShow = false,\r\n\t\t    brand = $('.brand'),\r\n\t\t    head = $('header'),\r\n\t\t    navbar = $('.navbar');\r\n\t\r\n\t\t$('.more').on('click',function(){\r\n\t\t\tif(isShow){\r\n\t\t\t\tnavbar.animate({'height':0,'opacity':1},'fast');\r\n\t\t\t\treturn isShow = false;\r\n\t\t\t}\r\n\t\r\n\t\t\tnavbar.css({'display':'block'});\r\n\t\t\tnavbar.animate({'height':'75px','opacity':1},'fast');\r\n\t\t\tisShow = true;\r\n\t\t});\r\n\t\r\n\t\t$(window).on('scroll',function(){\r\n\t\t\tif($(this).scrollTop()>80){\r\n\t\t\t\tbrand.addClass('scroll');\r\n\t\t\t\tnavbar.css('display','block')\r\n\t\t\t\t\t  .animate({'opacity':1},1000);\r\n\t\t\t\t$(this).off('scroll');\r\n\t\t\t}\r\n\t\t});\r\n\t\r\n\t\r\n\t});\r\n\n\n/***/ },\n/* 12 */\n/*!*****************************!*\\\n  !*** ./src/views/index.vue ***!\n  \\*****************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(/*! !babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../~/vue-loader/lib/selector.js?type=script&index=0!./index.vue */ 13)\n\t__vue_template__ = __webpack_require__(/*! !vue-html-loader!./../../~/vue-loader/lib/selector.js?type=template&index=0!./index.vue */ 26)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 13 */\n/*!*************************************************************************************************************************************************************!*\\\n  !*** ./~/babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./~/vue-loader/lib/selector.js?type=script&index=0!./src/views/index.vue ***!\n  \\*************************************************************************************************************************************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t\tdata: function data() {\n\t\t\treturn {\n\t\t\t\tpid: '',\n\t\t\t\tposts: '',\n\t\t\t\tshowload: true\n\t\t\t};\n\t\t},\n\t\tcomponents: {\n\t\t\t'mySection': __webpack_require__(/*! ../components/section.vue */ 14),\n\t\t\t'myPagination': __webpack_require__(/*! ../components/pagination.vue */ 20),\n\t\t\t'loading': __webpack_require__(/*! ../components/loading.vue */ 23)\n\t\t},\n\t\troute: {\n\t\t\tdata: function data(transition) {\n\t\t\t\tvar tmp_id = transition.to.params.id ? transition.to.params.id : 1;\n\t\n\t\t\t\t$.get(ghost.url.api('posts', { fields: 'title,image,id,meta_description,created_at,slug,url', limit: '5', page: tmp_id, include: 'tags' })).done(function (data) {\n\t\t\t\t\ttransition.next({ pid: parseInt(tmp_id, 10), posts: data.posts, showload: false });\n\t\t\t\t}).fail(function (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n/***/ },\n/* 14 */\n/*!************************************!*\\\n  !*** ./src/components/section.vue ***!\n  \\************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(/*! !babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../~/vue-loader/lib/selector.js?type=script&index=0!./section.vue */ 15)\n\t__vue_template__ = __webpack_require__(/*! !vue-html-loader!./../../~/vue-loader/lib/selector.js?type=template&index=0!./section.vue */ 19)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 15 */\n/*!********************************************************************************************************************************************************************!*\\\n  !*** ./~/babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./~/vue-loader/lib/selector.js?type=script&index=0!./src/components/section.vue ***!\n  \\********************************************************************************************************************************************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t\tprops: ['post', 'identity'],\n\t\tcomponents: {\n\t\t\t'myComment': __webpack_require__(/*! ../components/comment.vue */ 16)\n\t\t}\n\t};\n\n/***/ },\n/* 16 */\n/*!************************************!*\\\n  !*** ./src/components/comment.vue ***!\n  \\************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(/*! !babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../~/vue-loader/lib/selector.js?type=script&index=0!./comment.vue */ 17)\n\t__vue_template__ = __webpack_require__(/*! !vue-html-loader!./../../~/vue-loader/lib/selector.js?type=template&index=0!./comment.vue */ 18)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 17 */\n/*!********************************************************************************************************************************************************************!*\\\n  !*** ./~/babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./~/vue-loader/lib/selector.js?type=script&index=0!./src/components/comment.vue ***!\n  \\********************************************************************************************************************************************************************/\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t\tprops: ['post_info']\n\t};\n\n/***/ },\n/* 18 */\n/*!*************************************************************************************************************!*\\\n  !*** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/comment.vue ***!\n  \\*************************************************************************************************************/\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=disqus_thread v-show-comment=post_info class=comment></div>\";\n\n/***/ },\n/* 19 */\n/*!*************************************************************************************************************!*\\\n  !*** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/section.vue ***!\n  \\*************************************************************************************************************/\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div> <section> <h3> <a v-link=\\\"{name:'post',params:{id:post.id}}\\\">{{post.title}}</a> </h3> <div class=pub-info v-f-time=post.created_at></div> <template v-if=identity> <article> {{post.meta_description}} <img :src=post.image alt=pic v-if=post.image> <div class=read><a v-link=\\\"{name:'post',params:{id:post.id}}\\\">阅读全文</a></div> </article> <hr> <ul class=other-info> <li> <ul class=\\\"fa fa-tags\\\"> <li v-for=\\\"tag in post.tags\\\" v-if=\\\"post.tags.length > 0\\\"> <a :href=\\\"'/tag/' + tag.slug\\\">{{tag.name}}</a> </li> <li v-if=\\\"post.tags.length == 0\\\">无标签</li> </ul> </li> </ul> </template> <template v-else> <article class=markdown-body> {{{post.html}}} </article> </template> </section> <my-comment :post_info=post v-if=!identity></my-comment> </div>\";\n\n/***/ },\n/* 20 */\n/*!***************************************!*\\\n  !*** ./src/components/pagination.vue ***!\n  \\***************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(/*! !babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../~/vue-loader/lib/selector.js?type=script&index=0!./pagination.vue */ 21)\n\t__vue_template__ = __webpack_require__(/*! !vue-html-loader!./../../~/vue-loader/lib/selector.js?type=template&index=0!./pagination.vue */ 22)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 21 */\n/*!***********************************************************************************************************************************************************************!*\\\n  !*** ./~/babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./~/vue-loader/lib/selector.js?type=script&index=0!./src/components/pagination.vue ***!\n  \\***********************************************************************************************************************************************************************/\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t\tdata: function data() {\n\t\t\treturn {\n\t\t\t\tpages: pages\n\t\t\t};\n\t\t},\n\t\tprops: ['pid'],\n\t\tmethods: {\n\t\t\tforward: function forward(e) {\n\t\t\t\troute.go({\n\t\t\t\t\tname: 'page',\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tid: this.pid - 1\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tbackward: function backward(e) {\n\t\t\t\troute.go({\n\t\t\t\t\tname: 'page',\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tid: this.pid + 1\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\tcanNext: function canNext() {\n\t\t\t\tif (this.pid < this.pages) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tcanPrev: function canPrev() {\n\t\t\t\tif (this.pid > 1) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n/***/ },\n/* 22 */\n/*!****************************************************************************************************************!*\\\n  !*** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/pagination.vue ***!\n  \\****************************************************************************************************************/\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<ul class=pagination> <li v-show=canPrev><a href=# @click.stop.prevent=forward>&laquo;</a></li> <li v-show=canNext><a href=# @click.stop.prevent=backward>&raquo;</a></li> </ul>\";\n\n/***/ },\n/* 23 */\n/*!************************************!*\\\n  !*** ./src/components/loading.vue ***!\n  \\************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_template__ = __webpack_require__(/*! !vue-html-loader!./../../~/vue-loader/lib/selector.js?type=template&index=0!./loading.vue */ 24)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 24 */\n/*!*************************************************************************************************************!*\\\n  !*** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/loading.vue ***!\n  \\*************************************************************************************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div class=load style=height:400px> <img src=\" + __webpack_require__(/*! ../load.gif */ 25) + \" alt=load width=60 height=64> </div>\";\n\n/***/ },\n/* 25 */\n/*!**********************!*\\\n  !*** ./src/load.gif ***!\n  \\**********************/\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"2dc52a5cdfef7d0d9aea515cf900b871.gif\";\n\n/***/ },\n/* 26 */\n/*!******************************************************************************************************!*\\\n  !*** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/index.vue ***!\n  \\******************************************************************************************************/\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<loading v-if=showload></loading> <my-section :post=post :identity=true v-for=\\\"post in posts\\\" transition=bl></my-section> <my-pagination :pid=pid></my-pagination>\";\n\n/***/ },\n/* 27 */\n/*!****************************!*\\\n  !*** ./src/views/post.vue ***!\n  \\****************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(/*! !babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../~/vue-loader/lib/selector.js?type=script&index=0!./post.vue */ 28)\n\t__vue_template__ = __webpack_require__(/*! !vue-html-loader!./../../~/vue-loader/lib/selector.js?type=template&index=0!./post.vue */ 29)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 28 */\n/*!************************************************************************************************************************************************************!*\\\n  !*** ./~/babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./~/vue-loader/lib/selector.js?type=script&index=0!./src/views/post.vue ***!\n  \\************************************************************************************************************************************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t\tdata: function data() {\n\t\t\treturn {\n\t\t\t\tpost_content: '',\n\t\t\t\tshowload: true\n\t\t\t};\n\t\t},\n\t\tcomponents: {\n\t\t\tmySection: __webpack_require__(/*! ../components/section.vue */ 14),\n\t\t\tloading: __webpack_require__(/*! ../components/loading.vue */ 23)\n\t\t},\n\t\troute: {\n\t\t\tdata: function data(transition) {\n\t\t\t\tvar tmp_id = transition.to.params.id ? transition.to.params.id : 1;\n\t\n\t\t\t\t$.get(ghost.url.api('posts/' + tmp_id, { fields: 'title,html,created_at', limit: '5', page: tmp_id })).done(function (data) {\n\t\t\t\t\ttransition.next({ post_content: data.posts[0], showload: false });\n\t\t\t\t}).fail(function (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n/***/ },\n/* 29 */\n/*!*****************************************************************************************************!*\\\n  !*** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/post.vue ***!\n  \\*****************************************************************************************************/\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<loading v-if=showload></loading> <my-section :post=post_content></my-section>\";\n\n/***/ },\n/* 30 */\n/*!***************************!*\\\n  !*** ./src/views/404.vue ***!\n  \\***************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(/*! !babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../~/vue-loader/lib/selector.js?type=script&index=0!./404.vue */ 31)\n\t__vue_template__ = __webpack_require__(/*! !vue-html-loader!./../../~/vue-loader/lib/selector.js?type=template&index=0!./404.vue */ 32)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 31 */\n/*!***********************************************************************************************************************************************************!*\\\n  !*** ./~/babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./~/vue-loader/lib/selector.js?type=script&index=0!./src/views/404.vue ***!\n  \\***********************************************************************************************************************************************************/\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {};\n\n/***/ },\n/* 32 */\n/*!****************************************************************************************************!*\\\n  !*** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/404.vue ***!\n  \\****************************************************************************************************/\n/***/ function(module, exports) {\n\n\tmodule.exports = \"\";\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** b.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap bc875cae2d248de2151e\n **/","var Vue = require('vue'),\r\n\tRouter = require('vue-router');\r\n\r\nrequire('./style/grid.css');\r\nrequire('./style/sass/entry.scss');\r\nrequire('./style/github-markdown.css');\r\nrequire('./script/script.js');\r\n\r\nVue.use(Router);\r\n\r\nvar router = new Router();\r\n\r\nrouter.map({\r\n\t'/':{\r\n\t\tname:'index',\r\n\t\tcomponent:require('./views/index.vue')\r\n\t},\r\n\t'/page/:id':{\r\n\t\tname:'page',\r\n\t\tcomponent:require('./views/index.vue')\r\n\t},\r\n\t'/post/:id':{\r\n\t\tname:'post',\r\n\t\tcomponent:require('./views/post.vue')\r\n\t},\r\n\t'*':{\r\n\t\tcomponent:require('./views/404.vue')\r\n\t}\r\n});\r\n\r\nrouter.beforeEach(function(){\r\n\twindow.scrollTo(0, 0);\r\n});\r\n\r\nwindow.route = router;\r\n\r\nVue.directive('f-time',function(value){\r\n\tif(typeof value === 'string'){\r\n\t\tvar time = value.split('T')[0].split('-').join('/');\r\n\t\tthis.el.innerText = time; \r\n\t}\r\n});\r\n\r\nVue.directive('show-comment',{\r\n\tupdate:function(newValue,oldValue){\r\n\t\tif(newValue.id){\r\n\t\t\tDISQUS.reset({\r\n\t\t\t  reload: true,\r\n\t\t\t  config: function () {  \r\n\t\t\t    this.page.identifier = newValue.id;  \r\n\t\t\t    this.page.url = location.href;\r\n\t\t\t  }\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n});\r\n\r\n/*Vue.directive('show-count',{\r\n\t//有谁能帮忙解决首页获取disqus评论数的问题。此方法能行，但不优雅。\r\n\tupdate:function(newValue,oldValue){\r\n\t\tvar s = document.createElement('script');\r\n\t\ts.src = '//bitibiti.disqus.com/count.js';\r\n\t\t(document.head || document.body).appendChild(s);\r\n\t\tif(newValue.id){\r\n\t\t\tthis.el.href = location.host + '/#!/post/' + newValue.id + '#disqus_thread';\r\n\t\t\tthis.el.dataset.disqusIdentifier = newValue.id;\r\n\t\t\tthis.el.className = 'go-comment';\r\n\t\t\tDISQUSWIDGETS.getCount({reset:true});\r\n\t\t}\r\n\t}\r\n\r\n});*/\r\n\r\nvar App = Vue.extend({});\r\nrouter.start(App,'#app');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/entry.js\n ** module id = 0\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.16\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind$1(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a non-enumerable property\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nvar isIE9 = inBrowser && navigator.userAgent.toLowerCase().indexOf('msie 9.0') > 0;\n\nvar isAndroid = inBrowser && navigator.userAgent.toLowerCase().indexOf('android') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} str\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  text = text.replace(/\\n/g, '');\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE$1 = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE$1.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text$1 = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether or not to handle fully object properties which\n   * are already backed by getters and seters. Depending on\n   * use case and environment, this might introduce non-neglible\n   * performance penalties.\n   */\n  convertAllProperties: false,\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n    warn = function (msg, e) {\n      if (hasConsole && (!config.silent || config.debug)) {\n        console.warn('[Vue warn]: ' + msg);\n        /* istanbul ignore if */\n        if (config.debug) {\n          if (e) {\n            throw e;\n          } else {\n            console.warn(new Error('Warning Stack Trace').stack);\n          }\n        }\n      }\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on$1(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !(el instanceof SVGElement)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && el.content instanceof DocumentFragment) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__vue_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;\nvar reservedTagRE = /^(slot|partial|component)$/;\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        if (tag.indexOf('-') > -1 || /HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el) {\n  // dynamic syntax\n  var exp = getAttr(el, 'is');\n  if (exp != null) {\n    return { id: exp };\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  var key = prop.path;\n  value = coerceProp(prop, value);\n  vm[key] = vm._data[key] = assertProp(prop, value) ? value : undefined;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction assertProp(prop, value) {\n  // if a prop is not provided and is not required,\n  // skip the check.\n  if (prop.raw === null && !prop.required) {\n    return true;\n  }\n  var options = prop.options;\n  var type = options.type;\n  var valid = true;\n  var expectedType;\n  if (type) {\n    if (type === String) {\n      expectedType = 'string';\n      valid = typeof value === expectedType;\n    } else if (type === Number) {\n      expectedType = 'number';\n      valid = typeof value === 'number';\n    } else if (type === Boolean) {\n      expectedType = 'boolean';\n      valid = typeof value === 'boolean';\n    } else if (type === Function) {\n      expectedType = 'function';\n      valid = typeof value === 'function';\n    } else if (type === Object) {\n      expectedType = 'object';\n      valid = isPlainObject(value);\n    } else if (type === Array) {\n      expectedType = 'array';\n      valid = isArray(value);\n    } else {\n      valid = value instanceof type;\n    }\n  }\n  if (!valid) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator.call(null, value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\nfunction formatType(val) {\n  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n}\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * 0.11 deprecation warning\n */\n\nstrats.paramAttributes = function () {\n  /* istanbul ignore next */\n  process.env.NODE_ENV !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var def;\n    var ids = Object.keys(components);\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  var options = {};\n  var key;\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  return assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n}\n\n/**\n * Assert asset exists\n */\n\nfunction assertAsset(val, type, id) {\n  if (!val) {\n    process.env.NODE_ENV !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n  }\n}\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index.\n *\n * @param {Number} index\n * @param {*} val\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar uid$3 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$3++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction protoAugment(target, src) {\n  target.__proto__ = src;\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  // cater for pre-defined getter/setters\n  var getter, setter;\n  if (config.convertAllProperties) {\n    var property = Object.getOwnPropertyDescriptor(obj, key);\n    if (property && property.configurable === false) {\n      return;\n    }\n    getter = property && property.get;\n    setter = property && property.set;\n  }\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind$1,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on$1,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tassertAsset: assertAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tinitProp: initProp,\n\tassertProp: assertProp,\n\tcoerceProp: coerceProp,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // save raw constructor data before merge\n    // so that we know which properties are provided at\n    // instantiation.\n    if (process.env.NODE_ENV !== 'production') {\n      this._runtimeData = options.data;\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initScope().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'proctected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\")|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    return new Function('scope', 'return ' + body + ';');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar internalQueueDepleted = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue = [];\n  userQueue = [];\n  has = {};\n  circular = {};\n  waiting = internalQueueDepleted = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  internalQueueDepleted = true;\n  runBatcherQueue(userQueue);\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        queue.splice(has[id], 1);\n        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // if an internal watcher is pushed, but the internal\n    // queue is already depleted, we run it immediately.\n    if (internalQueueDepleted && !watcher.user) {\n      watcher.run();\n      return;\n    }\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String} expression\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = isFn ? expOrFn.toString() : expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = Object.create(null);\n  this.newDeps = null;\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDeps[id]) {\n    this.newDeps[id] = dep;\n    if (!this.deps[id]) {\n      this.deps[id] = dep;\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n  this.newDeps = Object.create(null);\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var ids = Object.keys(this.deps);\n  var i = ids.length;\n  while (i--) {\n    var id = ids[i];\n    if (!this.newDeps[id]) {\n      this.deps[id].removeSub(this);\n    }\n  }\n  this.deps = this.newDeps;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var depIds = Object.keys(this.deps);\n  var i = depIds.length;\n  while (i--) {\n    this.deps[depIds[i]].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var depIds = Object.keys(this.deps);\n    var i = depIds.length;\n    while (i--) {\n      this.deps[depIds[i]].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse(val) {\n  var i, keys;\n  if (isArray(val)) {\n    i = val.length;\n    while (i--) traverse(val[i]);\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) traverse(val[keys[i]]);\n  }\n}\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n  }\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar FOR = 2000;\nvar IF = 2000;\nvar SLOT = 2100;\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        value = value.replace(importantRE, '').trim();\n      }\n      this.el.style.setProperty(prop, value, isImportant);\n    } else {\n      this.el.style.removeProperty(prop);\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixes[i] + prop;\n    }\n  }\n  if (camel in testEl.style) {\n    return prop;\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on = {\n\n  acceptStatement: true,\n  priority: ON,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on$1(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on$1(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.listener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.listener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && node.content instanceof DocumentFragment;\n}\n\nvar tagRE$1 = /<([\\w:]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment.\n  if (isRealTemplate(node)) {\n    trimNode(node.content);\n    return node.content;\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (template instanceof DocumentFragment) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__vue_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__vfrag__ = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__vfrag__ = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el)) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : el.outerHTML);\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar vIf = {\n\n  priority: IF,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseFactory = new FragmentFactory(this.vm, next);\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n      this.factory = new FragmentFactory(this.vm, el);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseFactory && !this.elseFrag) {\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar uid$1 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in items\" syntax\n    var inMatch = this.expression.match(/(.*) in (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Alias is required in v-for.');\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$1;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          frag.scope[alias] = value;\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    this.vm._watchers = this.vm._watchers.filter(function (w) {\n      return w.active;\n    });\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    defineReactive(scope, alias, value);\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__vfrag__ = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.before(prevEl.nextSibling);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        def(value, id, frag);\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__vfrag__;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__vfrag__;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n  };\n}\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\nvar text = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\n// must export plain object\nvar publicDirectives = {\n  text: text,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on,\n  bind: bind,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind$1(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n\n  // Important hack:\n  // in Chrome, if a just-entered element is applied the\n  // leave class while its interpolated property still has\n  // a very small value (within one frame), Chrome will\n  // skip the leave transition entirely and not firing the\n  // transtionend event. Therefore we need to protected\n  // against such cases using a one-frame timeout.\n  this.justEntered = true;\n  var self = this;\n  setTimeout(function () {\n    self.justEntered = false;\n  }, 17);\n\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on$1(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nvar transition = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    // apply on closest vm\n    el.__v_trans = new Transition(el, id, hooks, this.el.__vue__ || this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      val = coerceProp(prop, val);\n      if (assertProp(prop, val)) {\n        child[childKey] = val;\n      }\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   */\n\n  resolveComponent: function resolveComponent(id, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || id;\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(id, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHook = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHook && !cached) {\n      this.waitingFor = newComponent;\n      activateHook.call(newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      this.waitingFor.$destroy();\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (process.env.NODE_ENV !== 'production') {\n      if (current) current._inactive = true;\n      target._inactive = false;\n    }\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (value && typeof value === 'string') {\n      this.handleObject(stringToObject(value));\n    } else if (isPlainObject(value)) {\n      this.handleObject(value);\n    } else if (isArray(value)) {\n      this.handleArray(value);\n    } else {\n      this.cleanup();\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    this.cleanup(value);\n    var keys = this.prevKeys = Object.keys(value);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      var key = keys[i];\n      if (value[key]) {\n        addClass(this.el, key);\n      } else {\n        removeClass(this.el, key);\n      }\n    }\n  },\n\n  handleArray: function handleArray(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        addClass(this.el, value[i]);\n      }\n    }\n    this.prevKeys = value.slice();\n  },\n\n  cleanup: function cleanup(value) {\n    if (this.prevKeys) {\n      var i = this.prevKeys.length;\n      while (i--) {\n        var key = this.prevKeys[i];\n        if (key && (!value || !contains$1(value, key))) {\n          removeClass(this.el, key);\n        }\n      }\n    }\n  }\n};\n\nfunction stringToObject(value) {\n  var res = {};\n  var keys = value.trim().split(/\\s+/);\n  var i = keys.length;\n  while (i--) {\n    res[keys[i]] = true;\n  }\n  return res;\n}\n\nfunction contains$1(value, key) {\n  return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n}\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition\n};\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.');\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.');\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (options.required) {\n      // warn missing required\n      process.env.NODE_ENV !== 'production' && warn('Missing required prop: ' + name);\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, getDefault(vm, options));\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (vm._context) {\n          if (prop.mode === propBindingModes.ONE_TIME) {\n            // one time binding\n            value = (scope || vm._context).$get(prop.parentPath);\n            initProp(vm, prop, value);\n          } else {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          }\n        } else {\n            process.env.NODE_ENV !== 'production' && warn('Cannot bind dynamic prop on a root instance' + ' with no parent: ' + prop.name + '=\"' + raw + '\"');\n          }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value\n        value = options.type === Boolean && raw === '' ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} options\n * @return {*}\n */\n\nfunction getDefault(vm, options) {\n  // no default, return undefined\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// terminal directives\nvar terminalDirectives = ['for', 'if'];\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && node.tagName !== 'SCRIPT') {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(el.attributes, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: publicDirectives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) return;\n  // special case: give named slot a higher priority\n  // than unnamed slots\n  if (tag === 'slot' && hasBindAttr(el, 'name')) {\n    tag = '_namedSlot';\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n  var value, dirName;\n  for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n    dirName = terminalDirectives[i];\n    value = el.getAttribute('v-' + dirName);\n    if (value != null) {\n      return makeTerminalNodeLinkFn(el, dirName, value, options);\n    }\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} [def]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    // either an element directive, or if/for\n    def: def || publicDirectives[dirName]\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', publicDirectives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', publicDirectives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', publicDirectives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName);\n\n              if (process.env.NODE_ENV !== 'production') {\n                assertAsset(dirDef, 'directive', dirName);\n              }\n\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (el instanceof DocumentFragment) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value)) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\tterminalDirectives: terminalDirectives,\n\ttransclude: transclude\n});\n\nfunction stateMixin (Vue) {\n\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var propsData = this._data;\n    var optionsDataFn = this.$options.data;\n    var optionsData = optionsDataFn && optionsDataFn();\n    var runtimeData;\n    if (process.env.NODE_ENV !== 'production') {\n      runtimeData = (typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData) || {};\n      this._runtimeData = null;\n    }\n    if (optionsData) {\n      this._data = optionsData;\n      for (var prop in propsData) {\n        if (process.env.NODE_ENV !== 'production' && hasOwn(optionsData, prop) && !hasOwn(runtimeData, prop)) {\n          warn('Data field \"' + prop + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n        }\n        if (this._props[prop].raw !== null || !hasOwn(optionsData, prop)) {\n          set(optionsData, prop, propsData[prop]);\n        }\n      }\n    }\n    var data = this._data;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      this._proxy(key);\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind$1(userDef.get, this) : noop;\n          def.set = userDef.set ? bind$1(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind$1(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {String} name\n * @param {Node} el\n * @param {Vue} vm\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} raw\n * @param {Object} def - directive definition object\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n *\n * @param {Object} def\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind$1(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind$1(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = params[i];\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on$1(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (el instanceof DocumentFragment) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {String} name - directive name\n   * @param {Node} node   - target node\n   * @param {Object} desc - parsed directive descriptor\n   * @param {Object} def  - directive definition object\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[i];\n      fn = resolveAsset(this.$options, 'filters', filter.name);\n      if (process.env.NODE_ENV !== 'production') {\n        assertAsset(fn, 'filter', filter.name);\n      }\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String} id\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (id, cb) {\n    var factory = resolveAsset(this.$options, 'components', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(factory, 'component', id);\n    }\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory(function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nfunction globalAPI (Vue) {\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text$1,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n}\n\nvar filterRE = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement && !isSimplePath(exp)) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      for (var key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.');\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install APIs\nglobalAPI(Vue);\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n    return prev.concat(cur);\n  }, []);\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} sortKey\n * @param {String} reverse\n */\n\nfunction orderBy(arr, sortKey, reverse) {\n  arr = convertArray(arr);\n  if (!sortKey) {\n    return arr;\n  }\n  var order = reverse && reverse < 0 ? -1 : 1;\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(function (a, b) {\n    if (sortKey !== '$key') {\n      if (isObject(a) && '$value' in a) a = a.$value;\n      if (isObject(b) && '$value' in b) b = b.$value;\n    }\n    a = isObject(a) ? getPath(a, sortKey) : a;\n    b = isObject(b) ? getPath(b, sortKey) : b;\n    return a === b ? 0 : a > b ? order : -order;\n  });\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   */\n\n  currency: function currency(value, _currency) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    var stringified = Math.abs(value).toFixed(2);\n    var _int = stringified.slice(0, -3);\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = stringified.slice(-3);\n    var sign = value < 0 ? '-' : '';\n    return _currency + sign + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(partial, 'partial', id);\n    }\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\n// This is the elementDirective that handles <content>\n// transclusions. It relies on the raw content of an\n// instance being stored as `$options._content` during\n// the transclude phase.\n\n// We are exporting two versions, one for named and one\n// for unnamed, because the unnamed slots must be compiled\n// AFTER all named slots have selected their content. So\n// we need to give them different priorities in the compilation\n// process. (See #1965)\n\nvar slot = {\n\n  priority: SLOT,\n\n  bind: function bind() {\n    var host = this.vm;\n    var raw = host.$options._content;\n    if (!raw) {\n      this.fallback();\n      return;\n    }\n    var context = host._context;\n    var slotName = this.params && this.params.name;\n    if (!slotName) {\n      // Default slot\n      this.tryCompile(extractFragment(raw.childNodes, raw, true), context, host);\n    } else {\n      // Named slot\n      var selector = '[slot=\"' + slotName + '\"]';\n      var nodes = raw.querySelectorAll(selector);\n      if (nodes.length) {\n        this.tryCompile(extractFragment(nodes, raw), context, host);\n      } else {\n        this.fallback();\n      }\n    }\n  },\n\n  tryCompile: function tryCompile(content, context, host) {\n    if (content.hasChildNodes()) {\n      this.compile(content, context, host);\n    } else {\n      this.fallback();\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar namedSlot = extend(extend({}, slot), {\n  priority: slot.priority + 1,\n  params: ['name']\n});\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @param {Element} parent\n * @param {Boolean} main\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent, main) {\n  var frag = document.createDocumentFragment();\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    // if this is the main outlet, we want to skip all\n    // previously selected nodes;\n    // otherwise, we want to mark the node as selected.\n    // clone the node so the original raw content remains\n    // intact. this ensures proper re-compilation in cases\n    // where the outlet is inside a conditional block\n    if (main && !node.__v_selected) {\n      append(node);\n    } else if (!main && node.parentNode === parent) {\n      node.__v_selected = true;\n      append(node);\n    }\n  }\n  return frag;\n\n  function append(node) {\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      node = parseTemplate(node);\n    }\n    node = cloneNode(node);\n    frag.appendChild(node);\n  }\n}\n\nvar elementDirectives = {\n  slot: slot,\n  _namedSlot: namedSlot, // same as slot but with higher priority\n  partial: partial\n};\n\nVue.version = '1.0.16';\n\n/**\n * Vue and every constructor that extends Vue has an\n * associated options object, which can be accessed during\n * compilation steps as `this.constructor.options`.\n *\n * These can be seen as the default options of every\n * Vue instance.\n */\n\nVue.options = {\n  directives: publicDirectives,\n  elementDirectives: elementDirectives,\n  filters: filters,\n  transitions: {},\n  components: {},\n  partials: {},\n  replace: true\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (devtools) {\n  devtools.emit('init', Vue);\n} else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(navigator.userAgent)) {\n  console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n}\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 1\n ** module chunks = 0\n **/","/*!\n * vue-router v0.7.11\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return decodeURIComponent(part);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path) {\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        queryParams = this.parseQueryString(queryString);\n      }\n\n      path = decodeURI(path);\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  RouteRecognizer.VERSION = '0.1.9';\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn(msg) {\n    /* istanbul ignore next */\n    if (window.console) {\n      console.warn('[vue-router] ' + msg);\n      if (!exports$1.Vue || exports$1.Vue.config.debug) {\n        console.warn(new Error('warning stack trace:').stack);\n      }\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root) {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = decodeURI(location.pathname + location.search);\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(decodeURI(path.replace(/^#!?/, '') + query));\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    this.router = router;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    Vue.directive('link-active', {\n      priority: 1001,\n      bind: function bind() {\n        this.el.__v_link_active = true;\n      }\n    });\n\n    Vue.directive('link', {\n      priority: 1000,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check if active classes should be applied to a different element\n        this.activeEl = this.el;\n        var parent = this.el.parentNode;\n        while (parent) {\n          if (parent.__v_link_active) {\n            this.activeEl = parent;\n            break;\n          }\n          parent = parent.parentNode;\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            this.router.go({\n              path: el.pathname,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router._stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router._stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        this.updateClasses(route.path);\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path) {\n        var el = this.activeEl;\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass !== activeClass) {\n          removeClass(el, this.prevActiveClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            addClass(el, activeClass);\n          } else {\n            removeClass(el, activeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            addClass(el, activeClass);\n          } else {\n            removeClass(el, activeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this._stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype._stringifyPath = function _stringifyPath(path) {\n      var fullPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          if (path.query) {\n            params.queryParams = path.query;\n          }\n          fullPath = this._recognizer.generate(path.name, params);\n        } else if (path.path) {\n          fullPath = path.path;\n          if (path.query) {\n            var query = this._recognizer.generateQueryString(path.query);\n            if (fullPath.indexOf('?') > -1) {\n              fullPath += '&' + query.slice(1);\n            } else {\n              fullPath += query;\n            }\n          }\n        }\n      } else {\n        fullPath = path ? path + '' : '';\n      }\n      return encodeURI(fullPath);\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 2\n ** module chunks = 0\n **/","$(function(){\r\n\tvar isShow = false,\r\n\t    brand = $('.brand'),\r\n\t    head = $('header'),\r\n\t    navbar = $('.navbar');\r\n\r\n\t$('.more').on('click',function(){\r\n\t\tif(isShow){\r\n\t\t\tnavbar.animate({'height':0,'opacity':1},'fast');\r\n\t\t\treturn isShow = false;\r\n\t\t}\r\n\r\n\t\tnavbar.css({'display':'block'});\r\n\t\tnavbar.animate({'height':'75px','opacity':1},'fast');\r\n\t\tisShow = true;\r\n\t});\r\n\r\n\t$(window).on('scroll',function(){\r\n\t\tif($(this).scrollTop()>80){\r\n\t\t\tbrand.addClass('scroll');\r\n\t\t\tnavbar.css('display','block')\r\n\t\t\t\t  .animate({'opacity':1},1000);\r\n\t\t\t$(this).off('scroll');\r\n\t\t}\r\n\t});\r\n\r\n\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/script/script.js\n ** module id = 11\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./index.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./index.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/views/index.vue\n ** module id = 12\n ** module chunks = 0\n **/","<template>\r\n\t<loading v-if=\"showload\"></loading>\r\n\t<my-section :post='post' :identity='true' v-for=\"post in posts\" transition=\"bl\"></my-section>\r\n\t<my-pagination :pid='pid'></my-pagination>\r\n</template>\r\n\r\n<script>\r\n\tmodule.exports = {\r\n\t\tdata:function(){\r\n\t\t\treturn{\r\n\t\t\t\tpid:'',\r\n\t\t\t\tposts:'',\r\n\t\t\t\tshowload:true\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomponents:{\r\n\t\t\t'mySection':require('../components/section.vue'),\r\n\t\t\t'myPagination':require('../components/pagination.vue'),\r\n\t\t\t'loading':require('../components/loading.vue')\r\n\t\t},\r\n\t\troute:{\r\n\t\t\tdata:function(transition){\r\n\t\t\t\tvar tmp_id = transition.to.params.id?transition.to.params.id:1;\r\n\t\t\t\t//limit 大小应该与你后台设置的每页显示文章数一致\r\n\t\t\t\t$.get(ghost.url.api('posts',{fields:'title,image,id,meta_description,created_at,slug,url',limit:'5',page:tmp_id,include:'tags'}))\r\n\t\t\t\t\t.done(function(data){\r\n\t\t\t\t\t\ttransition.next({pid:parseInt(tmp_id,10),posts:data.posts,showload:false});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.fail(function(err){\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** index.vue?a3d9190e\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./section.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./section.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/section.vue\n ** module id = 14\n ** module chunks = 0\n **/","<template>\r\n\t<div>\r\n\t\t<section>\r\n\t\t\t<h3>\r\n\t\t\t\t<a v-link=\"{name:'post',params:{id:post.id}}\">{{post.title}}</a>\r\n\t\t\t</h3>\r\n\t\t\t<div class=\"pub-info\" v-f-time=\"post.created_at\"></div>\r\n\t\t\t<template v-if=\"identity\">\r\n\t\t\t\t<article>\r\n\t\t\t\t\t{{post.meta_description}}\r\n\t\t\t\t\t<img :src=\"post.image\" alt=\"pic\" v-if=\"post.image\">\r\n\t\t\t\t\t<div class=\"read\"><a v-link=\"{name:'post',params:{id:post.id}}\">阅读全文</a></div>\r\n\t\t\t\t</article>\r\n\t\t\t\t<hr>\r\n\t\t\t\t<ul class=\"other-info\">\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<ul class=\"fa fa-tags\">\r\n\t\t\t\t\t\t\t<li v-for=\"tag in post.tags\" v-if=\"post.tags.length > 0\">\r\n\t\t\t\t\t\t\t\t<a :href=\"'/tag/' + tag.slug\">{{tag.name}}</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li v-if=\"post.tags.length == 0\">无标签</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t</ul>\r\n\t\t\t</template>\r\n\t\t\t<template v-else>\r\n\t\t\t\t<article class=\"markdown-body\">\r\n\t\t\t\t\t{{{post.html}}}\r\n\t\t\t\t</article>\r\n\t\t\t</template>\r\n\t\t</section>\r\n\r\n\t\t<my-comment :post_info='post' v-if=\"!identity\"></my-comment> \r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\tmodule.exports = {\r\n\t\tprops:['post','identity'],\r\n\t\tcomponents:{\r\n\t\t\t'myComment':require('../components/comment.vue')\r\n\t\t}\r\n\t}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** section.vue?e78e8c46\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./comment.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./comment.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/comment.vue\n ** module id = 16\n ** module chunks = 0\n **/","<template>\r\n\t<div id=\"disqus_thread\" v-show-comment=\"post_info\" class=\"comment\"></div>\r\n</template>\r\n<script>\r\n\tmodule.exports = {\r\n\t\tprops:['post_info']\r\n\t}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** comment.vue?0f7645bb\n **/","module.exports = \"<div id=disqus_thread v-show-comment=post_info class=comment></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/comment.vue\n ** module id = 18\n ** module chunks = 0\n **/","module.exports = \"<div> <section> <h3> <a v-link=\\\"{name:'post',params:{id:post.id}}\\\">{{post.title}}</a> </h3> <div class=pub-info v-f-time=post.created_at></div> <template v-if=identity> <article> {{post.meta_description}} <img :src=post.image alt=pic v-if=post.image> <div class=read><a v-link=\\\"{name:'post',params:{id:post.id}}\\\">阅读全文</a></div> </article> <hr> <ul class=other-info> <li> <ul class=\\\"fa fa-tags\\\"> <li v-for=\\\"tag in post.tags\\\" v-if=\\\"post.tags.length > 0\\\"> <a :href=\\\"'/tag/' + tag.slug\\\">{{tag.name}}</a> </li> <li v-if=\\\"post.tags.length == 0\\\">无标签</li> </ul> </li> </ul> </template> <template v-else> <article class=markdown-body> {{{post.html}}} </article> </template> </section> <my-comment :post_info=post v-if=!identity></my-comment> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/section.vue\n ** module id = 19\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./pagination.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./pagination.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/pagination.vue\n ** module id = 20\n ** module chunks = 0\n **/","<template>\r\n\t<ul class=\"pagination\">\r\n\t\t<li v-show=\"canPrev\"><a href=\"#\" @click.stop.prevent=\"forward\">&laquo;</a></li>\r\n\t\t<li v-show=\"canNext\"><a href=\"#\" @click.stop.prevent=\"backward\">&raquo;</a></li>\r\n\t</ul>\r\n</template>\r\n\r\n<script>\r\n\tmodule.exports = {\r\n\t\tdata:function(){\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpages:pages,\r\n\t\t\t\t}\r\n\t\t},\r\n\t\tprops:['pid'],\r\n\t\tmethods:{\r\n\t\t\tforward:function(e){\r\n\t\t\t\troute.go({\r\n\t\t\t\t\tname:'page',\r\n\t\t\t\t\tparams:{\r\n\t\t\t\t\t\tid:this.pid-1\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tbackward:function(e){\r\n\t\t\t\troute.go({\r\n\t\t\t\t\tname:'page',\r\n\t\t\t\t\tparams:{\r\n\t\t\t\t\t\tid:this.pid+1\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed:{\r\n\t\t\tcanNext:function(){\r\n\t\t\t\tif(this.pid<this.pages){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcanPrev:function(){\r\n\t\t\t\tif(this.pid>1){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** pagination.vue?30afcea5\n **/","module.exports = \"<ul class=pagination> <li v-show=canPrev><a href=# @click.stop.prevent=forward>&laquo;</a></li> <li v-show=canNext><a href=# @click.stop.prevent=backward>&raquo;</a></li> </ul>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/pagination.vue\n ** module id = 22\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./loading.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/loading.vue\n ** module id = 23\n ** module chunks = 0\n **/","module.exports = \"<div class=load style=height:400px> <img src=\" + require(\"../load.gif\") + \" alt=load width=60 height=64> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/loading.vue\n ** module id = 24\n ** module chunks = 0\n **/","module.exports = __webpack_public_path__ + \"2dc52a5cdfef7d0d9aea515cf900b871.gif\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/load.gif\n ** module id = 25\n ** module chunks = 0\n **/","module.exports = \"<loading v-if=showload></loading> <my-section :post=post :identity=true v-for=\\\"post in posts\\\" transition=bl></my-section> <my-pagination :pid=pid></my-pagination>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/index.vue\n ** module id = 26\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./post.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./post.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/views/post.vue\n ** module id = 27\n ** module chunks = 0\n **/","<template>\r\n\t<loading v-if=\"showload\"></loading>\r\n\t<my-section :post='post_content'></my-section>\t\r\n</template>\r\n\r\n<script>\r\n\tmodule.exports = {\r\n\t\tdata:function(){\r\n\t\t\treturn{\r\n\t\t\t\tpost_content:'',\r\n\t\t\t\tshowload:true\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomponents:{\r\n\t\t\tmySection: require('../components/section.vue'),\r\n\t\t\tloading: require('../components/loading.vue')\r\n\t\t},\r\n\t\troute:{\r\n\t\t\tdata:function(transition){\r\n\t\t\t\tvar tmp_id = transition.to.params.id?transition.to.params.id:1;\r\n\t\t\t\t//limit 大小应该与你后台设置的每页显示文章数一致\r\n\t\t\t\t$.get(ghost.url.api('posts/'+tmp_id,{fields:'title,html,created_at',limit:'5',page:tmp_id}))\r\n\t\t\t\t\t.done(function(data){\r\n\t\t\t\t\t\ttransition.next({post_content:data.posts[0],showload:false});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.fail(function(err){\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** post.vue?1254522f\n **/","module.exports = \"<loading v-if=showload></loading> <my-section :post=post_content></my-section>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/post.vue\n ** module id = 29\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./404.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./404.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/views/404.vue\n ** module id = 30\n ** module chunks = 0\n **/","\r\n<template>\r\n\t\r\n</template>\r\n\r\n<script>\r\n\tmodule.exports = {\r\n\r\n\t}\r\n</script>\n\n\n/** WEBPACK FOOTER **\n ** 404.vue?15f36ccc\n **/","module.exports = \"\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/404.vue\n ** module id = 32\n ** module chunks = 0\n **/"],"sourceRoot":""}